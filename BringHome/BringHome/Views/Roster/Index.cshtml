@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="content-header">
    <div class="row">
        <div class="col-sm-6">
            <div class="header-section">
                <h1>Roster Karyawan</h1>
            </div>
        </div>
        <div class="col-sm-6 hidden-xs">
            <div class="header-section">
                <ul class="breadcrumb breadcrumb-top">
                    <li>User Interface</li>
                    <li>Forms</li>
                    <li><a href="">Components</a></li>
                </ul>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="block">
            <div class="block-title">
                <h2>Data Karyawan</h2>
            </div>

            <!-- Table Styles Block -->
            <div class="block">
                <!-- Table Styles Content -->
                <div class="table-responsive">
                    <!--
                    Available Table Classes:
                        'table'             - basic table
                        'table-bordered'    - table with full borders
                        'table-borderless'  - table with no borders
                        'table-striped'     - striped table
                        'table-condensed'   - table with smaller top and bottom cell padding
                        'table-hover'       - rows highlighted on mouse hover
                        'table-vcenter'     - middle align content vertically
                    -->
                    <table id="table-roster" class="table table-striped table-bordered table-vcenter"></table>
                </div>
                <!-- END Table Styles Content -->
            </div>
            <!-- END Table Styles Block -->
        </div>
        <!-- Datatables Block -->
    </div>
</div>

@section scripts {
    <!-- jQuery, Bootstrap, jQuery plugins and Custom JS code -->
    <script src="~/js/vendor/jquery-2.2.4.min.js"></script>
    <script src="~/js/vendor/bootstrap.min.js"></script>
    <script src="~/js/plugins.js"></script>
    <script src="~/js/app.js"></script>

    <!-- Load and execute javascript code used only in this page -->
    <script src="js/pages/uiTables.js"></script>
    <script>$(function () { UiTables.init(); });</script>
<script>
    App.datatables();
    var rosterListName = [], rosterList = [], tgl = [];

    $(document).ready(function () {
        init();
    });

    async function init() {
        tgl = await getDaysInMonth(5, 2024);
        await getList();
        await getRoster();
        await getAll();
    }

        var getAll = async () => {
            let cols = [
                { "title": "NIK", "data": "nik" },
                { "title": "NAMA", "data": "nama", "width": 120 },
                { "title": "JABATAN", "data": "jabatan", "width": 140 },
            ];

            let dataRoster = [];

            rosterListName.forEach((x, i) => {
                let rosterEntry = {
                    "nik": x.nik,
                    "nama": x.nama,
                    "jabatan": x.jabatan
                };

                tgl.forEach((dt) => {
                    let dtFormat = formatDate(new Date(dt));
                    let getRoster = rosterList.find(f => f.nik === x.nik && f.tanggal.split('T')[0] === dtFormat);
                    rosterEntry[dtFormat] = getRoster ? getRoster.status : "-";
                });

                dataRoster.push(rosterEntry);
            });


            tgl.forEach((x) => {
                let dateCol = formatDate(new Date(x));
                cols.push({ "title": new Date(x).getDate().toString(), "data": dateCol });
            });

            cols.push({
                "data": "nik",
                "render": (data) => {
                    return `<div class="text-center"><a href="/Roster/Detail/${data}" data-toggle="tooltip" title="Edit User" class="btn btn-effect-ripple btn-sm btn-success"><i class="fa fa-pencil"></i></a></div>`;
                },
                "orderable": false,
                "width": "180px",
                "searchable": false
            });

            $("#table-roster").DataTable({
                "data": dataRoster,
                "columns": cols,
                "language": {
                    "emptyTable": "Tidak ada data"
                },
                "fixedColumns": {
                    "start": 1,
                    "end": 1
                },
                "rowCallback": (row, data) => {
                    let cells = $(row).find('td');
                    cells.each((index, cell) => {
                        let cellData = $(cell).text();
                        if (cellData === 'R') {
                            $(cell).css({
                                'background-color': 'red', 
                                'font-weight': 'bold', 
                                'text-align': 'center',
                                'color': '#ffffff'
                            });
                        } else if (cellData === 'D') {
                            $(cell).css({
                                'background-color': 'lightgreen',
                                'font-weight': 'bold', 
                                'text-align': 'center' 
                            });
                        } else if (cellData === 'OFF') {
                            $(cell).css({
                                'background-color': 'yellow', 
                                'font-weight': 'bold', 
                                'text-align': 'center'
                            });
                        }
                    });
                }
            });
        };




    async function getRoster() {
        await $.get(`/Roster/GetRosters`, function (result) {
            rosterList = result.data;
            return result;
        });
        return [];
    }

    async function getList() {
        await $.get(`/Roster/GetList`, function (result) {
            rosterListName = result.data;
            return result;
        });
        return []
    }

    var jeketek = () => {
        return "good job";
    }

    var getDaysInMonth = (month, year) => {
        var date = new Date(year, month, 1);
        var days = [];
        while (date.getMonth() === month) {
            days.push(new Date(date));
            date.setDate(date.getDate() + 1);
        }
        return days;
    }

    function formatDate(date) {
        var d = new Date(date),
            month = '' + (d.getMonth() + 1),
            day = '' + d.getDate(),
            year = d.getFullYear();

        if (month.length < 2)
            month = '0' + month;
        if (day.length < 2)
            day = '0' + day;

        return [year, month, day].join('-');
    }
</script>
}
